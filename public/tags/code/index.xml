<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on Ethan</title>
    <link>/tags/code/</link>
    <description>Recent content in Code on Ethan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>dplyr verbs</title>
      <link>/posts/dplyr/</link>
      <pubDate>Thu, 05 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/dplyr/</guid>
      <description>Why dplyr? The different tasks you can do with dplyr can be done with base R and other r-packages. So why learn dplyr? In my opinion, you should learn dplyr because it
Is easy to use and understand Is fast and efficient Simplifies data manipulation Fits within broader philosophy of data science (e.g. the tidyverse)  dplyr, along with other packages from the tidyverse, were designed to work well together because they share a common “grammar” and philosophy.</description>
    </item>
    
    <item>
      <title>Restructuring Dyadic Data</title>
      <link>/posts/restructuring-dyadic-data/</link>
      <pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/restructuring-dyadic-data/</guid>
      <description>Introduction &amp;amp; Setup This post will explain how to restructure data without a Graphical User Interface (GUI) program e.g. David Kenny’s website. Instead, I will show you how to manipulate data both in a general sense and specifically for dyadic data analysis in a more flexible way by writing my own code and sharing it with you. Be forewarned, writing R-scripts can be frustrating but the payoffs are huge. I highly encourage you to move away from GUIs and start writing scripts for many, many reasons that I won’t discuss here.</description>
    </item>
    
  </channel>
</rss>